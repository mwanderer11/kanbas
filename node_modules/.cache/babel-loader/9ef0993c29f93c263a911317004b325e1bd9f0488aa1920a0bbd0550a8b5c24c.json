{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport db from \"./../Database\";\nconst initialState = {\n  assignments: db.assignments,\n  assignment: {\n    title: \"New Assignment\"\n  }\n};\nconst assignmentsSlice = createSlice({\n  name: \"assignments\",\n  initialState,\n  reducers: {\n    addAssignment: (state, action) => {\n      state.assignments = [{\n        ...action.payload,\n        id: new Date().getTime()\n      }, ...state.assignments];\n    },\n    deleteAssignment: (state, action) => {\n      state.assignments = state.assignments.filter(assignment => assignment.id !== action.payload.id);\n    },\n    updateAssignment: (state, action) => {\n      state.assignments = state.assignments.map(assignment => {\n        if (assignment.id !== action.payload.id) {\n          return action.payload;\n        } else {\n          return assignment;\n        }\n      });\n    },\n    setAssignment: (state, action) => {\n      state.assignments = action.payload;\n    }\n  }\n});\nexport const {\n  addAssignment,\n  deleteAssignment,\n  updateAssignment,\n  setAssignment\n} = assignmentsSlice.actions;\nexport default assignmentsSlice.reducer;","map":{"version":3,"names":["createSlice","db","initialState","assignments","assignment","title","assignmentsSlice","name","reducers","addAssignment","state","action","payload","id","Date","getTime","deleteAssignment","filter","updateAssignment","map","setAssignment","actions","reducer"],"sources":["/Users/maliawanderer/Desktop/kanbas1/src/Kanbas/Assignments/assignmentsReducer.js"],"sourcesContent":["import { createSlice} from \"@reduxjs/toolkit\";\nimport db from \"./../Database\";\n\nconst initialState = {\n    assignments: db.assignments,\n    assignment: {title: \"New Assignment\"},\n};\n\nconst assignmentsSlice = createSlice({\n    name: \"assignments\",\n    initialState,\n    reducers: {\n        addAssignment: (state, action) => {\n            state.assignments = [\n                {...action.payload, id: new Date().getTime()}, ...state.assignments,\n            ];\n        },\n        deleteAssignment: (state, action) => {\n            state.assignments = state.assignments.filter(\n                (assignment) => assignment.id !== action.payload.id);\n        },\n        updateAssignment: (state, action) => {\n            state.assignments = state.assignments.map((assignment) => {\n                if(assignment.id !== action.payload.id) {\n                    return action.payload;\n                }\n                else {\n                    return assignment;\n                }\n            });\n        },\n        setAssignment: (state, action) => {\n            state.assignments = action.payload;\n        },\n    },\n});\n\nexport const { addAssignment, deleteAssignment,\n    updateAssignment, setAssignment } = assignmentsSlice.actions;\nexport default assignmentsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAO,kBAAkB;AAC7C,OAAOC,EAAE,MAAM,eAAe;AAE9B,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAEF,EAAE,CAACE,WAAW;EAC3BC,UAAU,EAAE;IAACC,KAAK,EAAE;EAAgB;AACxC,CAAC;AAED,MAAMC,gBAAgB,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,aAAa;EACnBL,YAAY;EACZM,QAAQ,EAAE;IACNC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACP,WAAW,GAAG,CAChB;QAAC,GAAGQ,MAAM,CAACC,OAAO;QAAEC,EAAE,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;MAAC,CAAC,EAAE,GAAGL,KAAK,CAACP,WAAW,CACtE;IACL,CAAC;IACDa,gBAAgB,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACP,WAAW,GAAGO,KAAK,CAACP,WAAW,CAACc,MAAM,CACvCb,UAAU,IAAKA,UAAU,CAACS,EAAE,KAAKF,MAAM,CAACC,OAAO,CAACC,EAAE,CAAC;IAC5D,CAAC;IACDK,gBAAgB,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACP,WAAW,GAAGO,KAAK,CAACP,WAAW,CAACgB,GAAG,CAAEf,UAAU,IAAK;QACtD,IAAGA,UAAU,CAACS,EAAE,KAAKF,MAAM,CAACC,OAAO,CAACC,EAAE,EAAE;UACpC,OAAOF,MAAM,CAACC,OAAO;QACzB,CAAC,MACI;UACD,OAAOR,UAAU;QACrB;MACJ,CAAC,CAAC;IACN,CAAC;IACDgB,aAAa,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACP,WAAW,GAAGQ,MAAM,CAACC,OAAO;IACtC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,aAAa;EAAEO,gBAAgB;EAC1CE,gBAAgB;EAAEE;AAAc,CAAC,GAAGd,gBAAgB,CAACe,OAAO;AAChE,eAAef,gBAAgB,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}